

Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 

Example 1:

Input: nums = [2,2,1]
Output: 1

Example 2:

Input: nums = [4,1,2,1,2]
Output: 4

Example 3:

Input: nums = [1]
Output: 1


class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        '''
        for itr in nums:
            if nums.count(itr) == 1:
                return itr
        '''
        i = 0
        length = len(nums)-1
        while i <= length:
            a = nums.pop(i)
            if a in nums:
                nums.remove(a)
            else:
                return a