Given a sorted array of distinct integers and a target value, return the index if the target is found. 
If not, return the index where it would be if it were inserted in order.


Example 1:
Input: nums = [1,3,5,6], target = 5
Output: 2

Example 2:
Input: nums = [1,3,5,6], target = 2
Output: 1


class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        low = 0
        high = len(nums)-1
        mid = 0
        
        while low<=high:
            
            mid = (high + low) //2
            
            if(nums[mid] < target):
                low = mid+1
                print("low:", low)
                print("mid:", mid)
                
            elif(nums[mid] > target):
                high = mid - 1
                print("high:", high)
                print("mid:", mid)
        
            else:
                print("low:", low)
                print("mid:", mid)
                print("high:", high)
                return mid
                
        if target not in nums:
            nums.append(target)
            nums.sort()
            return (nums.index(target))
        
        
        