
Suppose Andy and Doris want to choose a restaurant for dinner, 
and they both have a list of favorite restaurants represented by strings.

You need to help them find out their common interest with the least list index sum. 
If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.

Example 1:

Input: list1 = ["Shogun","Tapioca Express","Burger King","KFC"], list2 = ["Piatti","The Grill at Torrey Pines","Hungry Hunter Steakhouse","Shogun"]
Output: ["Shogun"]
Explanation: The only restaurant they both like is "Shogun".

Example 2:

Input: list1 = ["Shogun","Tapioca Express","Burger King","KFC"], list2 = ["KFC","Shogun","Burger King"]
Output: ["Shogun"]
Explanation: The restaurant they both like and have the least index sum is "Shogun" with index sum 1 (0+1).

Example 3:

Input: list1 = ["Shogun","Tapioca Express","Burger King","KFC"], list2 = ["KFC","Burger King","Tapioca Express","Shogun"]
Output: ["KFC","Burger King","Tapioca Express","Shogun"]

Example 4:

Input: list1 = ["Shogun","Tapioca Express","Burger King","KFC"], list2 = ["KNN","KFC","Burger King","Tapioca Express","Shogun"]
Output: ["KFC","Burger King","Tapioca Express","Shogun"]

Example 5:

Input: list1 = ["KFC"], list2 = ["KFC"]
Output: ["KFC"]

class Solution:
    def findRestaurant(self, list1: List[str], list2: List[str]) -> List[str]:
        index_add = []
        if len(list1) == len(list2) and list1 == list2[::-1]:
            return list2[::-1]
        intersection = [restaurent for restaurent in list1 if restaurent in list2]
        if len(intersection) == 1:
            return intersection
        else:
            for restaurent in intersection:
                index_add.append(list1.index(restaurent)+list2.index(restaurent))
            if len(set(index_add)) == 1:
                return intersection
            else:
                result = {intersection[itr]: index_add[itr] for itr in range(len(intersection))}
                print(index_add, result)
                return [min(result, key=result.get)]