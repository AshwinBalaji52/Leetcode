Given an integer array nums, find the contiguous subarray (containing at least one number) 
which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.

*****KANDANE ALGO****

class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        curr_max = global_max = nums[0]
        
        # iterate through each index of array:
        for i in range(1,len(nums)):
            curr_max= max(nums[i], (nums[i] + curr_max))
            
            if curr_max > global_max:
                global_max = curr_max
        
            #condition to check and update global max
        return global_max